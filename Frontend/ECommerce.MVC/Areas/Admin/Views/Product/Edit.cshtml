@using ECommerce.MVC.Models.CategoryModels
@using ECommerce.MVC.Models.EnumResponseModels
@model ECommerce.MVC.Areas.Admin.Models.ProductModels.ProductUpdateModel
@{
    Layout = "_Layout";
}
<meta charset="utf-8" />
<div class="container-xxl">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    <form asp-action="Edit" asp-controller="Product" method="post" enctype="multipart/form-data">
        <div class="row">
 
            <div class="col-xl-3 col-lg-4">
                <div class="card">
                    <div class="card-body text-center">
                 
                        @if (!string.IsNullOrEmpty(Model.ImageUrl))
                        {
                            <img src="@Model.ImageUrl" alt="Product Image" class="img-fluid rounded bg-light">
                        }
                        else
                        {
                            <p>No image uploaded yet.</p>
                        }

                        <div class="mt-3">
                            <label class="form-label">Yeni Resim Yükle</label>
                
                            @Html.TextBoxFor(m => m.Image, new { type = "file", @class = "form-control" })
                            <span class="text-danger" asp-validation-for="Image"></span>
                        </div>

                        <input type="hidden" name="ImageUrl" value="@Model.ImageUrl" />
                    </div>
                </div>
            </div>


            <div class="col-xl-9 col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Ürün Bilgileri</h4>
                    </div>
                    <div class="card-body">
                        @Html.HiddenFor(m => m.Id)

                        <div class="mb-3">
                            <label class="form-label">Ürün ismi</label>
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                            <span class="text-danger" asp-validation-for="Name"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Açıklama</label>
                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                            <span class="text-danger" asp-validation-for="Description"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Kategori</label>
                            <select name="CategoryId" class="form-control">
                                @foreach (var category in ViewBag.Categories as List<CategoryModel>)
                                {
                                    <option value="@category.Id" @(Model.CategoryId == category.Id ? "selected" : "")>@category.Name</option>
                                }
                            </select>
                        </div>


                   

                        <div class="mb-3">
                            <label class="form-label">Stok</label>
                            @Html.TextBoxFor(m => m.Stock, new { type = "number", @class = "form-control" })
                            <span class="text-danger" asp-validation-for="Stock"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Hazırlanma Süresi</label>
                            @Html.TextBoxFor(m => m.PreparationTimeInDays, new { type = "number", @class = "form-control" })
                            <span class="text-danger" asp-validation-for="PreparationTimeInDays"></span>
                        </div>

                        <div class="mb-3 form-check">
                            <input class="form-check-input" type="checkbox" name="IsActive" value="true" @(Model.IsActive ? "checked" : "") />
                            <label class="form-check-label">Active</label>
                        </div>

              
                        <div class="mb-3">
                            <label class="form-label">Renk</label>
                            <div class="d-flex flex-wrap gap-2">
                                @foreach (var color in ViewBag.Colors as List<EnumResponseModel>)
                                {
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="AvailableColorIds" value="@color.Id"
                                        @(Model.AvailableColorIds.Contains(color.Id) ? "checked" : "") />
                                        <label class="form-check-label">@color.Name</label>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Beden</label>
                            <div class="d-flex flex-wrap gap-2">
                                @foreach (var size in ViewBag.Sizes as List<EnumResponseModel>)
                                {
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="AvailableSizeIds" value="@size.Id"
                                        @(Model.AvailableSizeIds.Contains(size.Id) ? "checked" : "") />
                                        <label class="form-check-label">@size.Name</label>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="card">
                            <div class="card-header">
                                <h4 class="card-title">Fiyat Bilgisi</h4>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-lg-4">
                                        <label for="product-price" class="form-label">Fiyat</label>
                                        <div class="input-group mb-3">
                                            @Html.TextBoxFor(m => m.UnitPrice, new { type = "text", @class = "form-control", @id = "product-price" })
                                            <span class="text-danger" asp-validation-for="UnitPrice"></span>
                                        </div>
                                    </div>


                            
 

                                </div>
                            </div>
                        </div>



                        <div class="d-flex justify-content-end gap-2">
                          
                            <button type="submit" class="btn btn-primary">Kaydet</button>
                            <button type="button" class="btn btn-warning soft-delete-btn" data-id="@Model.Id">Geçici Sil</button>
                            

                        </div>

                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {

            console.log("JavaScript yüklendi!");

            $(document).on("click", ".soft-delete-btn", function () {
                var productId = $(this).data("id");
                console.log("Soft Delete Clicked, ID:", productId);

                if (!productId || productId === 0) {
                    Swal.fire("Hata", "Geçerli bir ürün ID'si bulunamadı.", "error");
                    return;
                }

                Swal.fire({
                    title: "Emin misiniz?",
                    text: "Bu ürün geçici olarak silinecek, aktifliği kaldırılacaktır.!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Evet, sil!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: "POST",
                            url: "/Admin/Product/SoftDeleteProduct",
                            data: { id: productId },
                            success: function (response) {
                                Swal.fire("Başarılı", response.message, "success").then(() => {
                                    location.reload();
                                });
                            },
                            error: function () {
                                Swal.fire("Hata", "Ürün silinirken hata oluştu.", "error");
                            }
                        });
                    }
                });
            });


        });
        $(document).ready(function () {
            $('#product-price').on('input', function () {
                var value = $(this).val();
                // Eğer 'M' varsa, çıkar
                value = value.replace('M', '');

                // Sayıyı düzgün şekilde göster, fakat 2 ondalık basamağa yuvarlama
                if (value && !isNaN(value)) {
                    // Sayıyı olduğu gibi bırak, sadece virgülden sonra 2 basamaktan fazlasını kes
                    var formattedValue = parseFloat(value).toString();
                    $(this).val(formattedValue);
                }
            });

            // Form submit öncesi M'yi temizle
            $('form').submit(function () {
                var price = $('#product-price').val();
                $('#product-price').val(price.replace('M', ''));
            });
        });
        $(document).ready(function () {
            // TempData'dan SuccessMessage'yi alıyoruz
            var successMessage = '@Html.Raw(TempData["SuccessMessage"])';
            if (successMessage) {
                // SweetAlert ile mesajı göster
                Swal.fire({
                    title: 'Başarılı!',
                    text: successMessage,
                    icon: 'success',
                    confirmButtonText: 'Tamam'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Mesaj gösterildikten sonra yönlendirme yap
                        window.location.href = '@Url.Action("GetProductsBySeller", "Product")';
                    }
                });
            }
        });

    </script>
}
